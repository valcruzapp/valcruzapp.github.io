{"version":3,"sources":["components/TextMaskCustom.js","service/firestore.js","screens/OnBoard.js","components/InfoCard.js","screens/Protocols.js","components/FeedbackModal.js","screens/SelfCheckup.js","screens/Profile.js","service/PushNotifications.js","App.js","serviceWorker.js","index.js"],"names":["TextMaskCustom","props","inputRef","other","ref","inputElement","type","mask","placeholderChar","showMask","setPushKeys","pushkey","db","firebase","firestore","userId","localStorage","getItem","collection","doc","update","reportHealthCheck","healthCheck","a","role","timeStamp","Date","now","add","docRef","id","getContent","target","where","get","querySnapshot","content","forEach","data","OnBoard","useState","setRole","othersRole","setOthersRole","telephone","setTelephone","name","setName","city","setCity","place","setPlace","hasSelectedOthersRole","setHasSelectedOthersRole","hasTelephoneError","setHasTelephoneError","hasNameError","setHasNameError","hasCityError","setHasCityError","className","TextField","error","helperText","label","value","onChange","event","FormControl","InputLabel","htmlFor","Input","inputComponent","Button","onClick","user","lowerCaseCity","toLowerCase","setItem","replace","length","then","onOnboardFinish","color","variant","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","InfoCard","classes","React","expanded","setExpanded","whatsappMsg","text","whatsappLink","key","Card","CardHeader","title","subheader","date","array","split","day","month","formatDate","CardMedia","image","CardContent","Typography","component","description","CardActions","disableSpacing","rel","href","IconButton","clsx","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","paragraph","src","Protocols","map","c","FeedbackModal","open","handleClose","success","missingEpi","reportId","openReportEpi","setOpenReportEpi","reportedEpi","setReportedEpi","sendReport","missingEpis","set","merge","Modal","aria-labelledby","aria-describedby","onClose","e","includes","buttonName","filter","SelfCheckup","EPIS_LIST","symptoms","setSymptom","setReportId","epi","setEPI","hadContact","setHadContact","handleSubmit","lastReport","JSON","stringify","dbReportId","s","onSubmitCheckup","Profile","useEffect","localCity","camelizedCity","charAt","toUpperCase","slice","disabled","updateUser","onUpdateFinish","requestPermission","token","ms","messaging","getToken","console","log","App","hasOnboardFinished","setHasOnboardFinished","tab","setTab","setContent","parse","dbContent","Object","entries","setInterval","navigateToProtocols","ComponentsStack","tabsName","BottomNavigation","newTab","showLabels","BottomNavigationAction","icon","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","initializeApp","firebaseKeys","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c1e64390.chunk.js","sourcesContent":["import React from \"react\";\nimport MaskedInput from \"react-text-mask\";\n\nconst TextMaskCustom = props => {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      type=\"tel\"\n      mask={[\n        \"(\",\n        /[1-9]/,\n        /\\d/,\n        \")\",\n        \" \",\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        \"-\",\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/\n      ]}\n      placeholderChar={\"\\u2000\"}\n      showMask\n    />\n  );\n};\n\nexport default TextMaskCustom;\n","import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport firebaseKeys from \"./firebaseKeys.json\";\n\nexport const initFirebase = () => {\n  firebase.initializeApp(firebaseKeys);\n};\n\nexport const setUser = user => {\n  const db = firebase.firestore();\n  db.collection(\"users\")\n    .add(user)\n    .then(docRef => {\n      localStorage.setItem(\"userId\", docRef.id);\n    });\n};\n\nexport const updateUser = user => {\n  const db = firebase.firestore();\n  const userId = localStorage.getItem(\"userId\");\n  db.collection(\"users\")\n    .doc(userId)\n    .set(user, { merge: true });\n};\n\nexport const setPushKeys = pushkey => {\n  const db = firebase.firestore();\n  const userId = localStorage.getItem(\"userId\");\n  db.collection(\"users\")\n    .doc(userId)\n    .update({ pushkey: pushkey });\n};\n\nexport const reportHealthCheck = async healthCheck => {\n  const db = firebase.firestore();\n  healthCheck.userId = localStorage.getItem(\"userId\");\n  healthCheck.role = localStorage.getItem(\"role\");\n  healthCheck.timeStamp = Date.now();\n\n  const docRef = await db.collection(\"healthChecks\").add(healthCheck);\n  return docRef.id;\n};\n\nexport const updateHealthCheck = (healthCheck, id) => {\n  const db = firebase.firestore();\n  db.collection(\"healthChecks\")\n    .doc(id)\n    .set(healthCheck, { merge: true });\n};\n\nexport const getContent = async target => {\n  const db = firebase.firestore();\n  const querySnapshot = await db\n    .collection(\"content\")\n    .where(\"target\", \"==\", target)\n    .get();\n  const content = {};\n  querySnapshot.forEach(doc => {\n    content[doc.id] = doc.data();\n  });\n\n  const querySnapshot2 = await db\n    .collection(\"content\")\n    .where(\"target\", \"==\", \"all\")\n    .get();\n  querySnapshot2.forEach(doc => {\n    content[doc.id] = doc.data();\n  });\n\n  return content;\n};\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextMaskCustom from \"../components/TextMaskCustom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { setUser } from \"../service/firestore\";\nimport \"./OnBoard.css\";\n\nconst OnBoard = props => {\n  // States\n  const [role, setRole] = useState();\n  const [othersRole, setOthersRole] = useState(\"\");\n  const [telephone, setTelephone] = useState();\n  const [name, setName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [hasSelectedOthersRole, setHasSelectedOthersRole] = useState(false);\n  const [hasTelephoneError, setHasTelephoneError] = useState(false);\n  const [hasNameError, setHasNameError] = useState(false);\n  const [hasCityError, setHasCityError] = useState(false);\n\n  // Handle Change Functions\n  const handleTelephoneChange = event => {\n    setHasTelephoneError(false);\n    setTelephone(event.target.value);\n  };\n\n  const handleNameChange = event => {\n    setHasNameError(false);\n    setName(event.target.value);\n  };\n\n  const handleCityChange = event => {\n    setHasCityError(false);\n    setCity(event.target.value);\n  };\n\n  const handlePlaceChange = event => {\n    setPlace(event.target.value);\n  };\n\n  const handleOthersRoleChange = event => {\n    setOthersRole(event.target.value);\n  };\n\n  // Validate Functions\n  const validateTelephone = () => {\n    if (telephone && telephone.replace(/[\\u2000]/g, \"\").length >= 14) {\n      return true;\n    } else {\n      setHasTelephoneError(true);\n      return false;\n    }\n  };\n\n  const validateName = () => {\n    if (name && name.replace(/\\d/g, \"\").length > 3) {\n      return true;\n    } else {\n      setHasNameError(true);\n      return false;\n    }\n  };\n\n  const validateCity = () => {\n    if (city && city.replace(/\\d/g, \"\").length > 3) {\n      return true;\n    } else {\n      setHasCityError(true);\n      return false;\n    }\n  };\n\n  // Handle the click to finish the onboard\n  const handleFilledOthers = () => {\n    setRole(othersRole);\n  };\n  const handleFinishOnboard = () => {\n    const lowerCaseCity = city.toLowerCase();\n    localStorage.setItem(\"role\", role);\n    localStorage.setItem(\"telephone\", telephone);\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"city\", lowerCaseCity);\n    localStorage.setItem(\"place\", place);\n\n    if (validateName() && validateTelephone() && validateCity()) {\n      localStorage.setItem(\"hasOnboardFinished\", \"true\");\n      setUser({\n        role,\n        telephone,\n        name,\n        city: lowerCaseCity,\n        place: place || \"\"\n      });\n      // Callback father's onOnboardFinish function\n      props.onOnboardFinish();\n    }\n  };\n\n  // Auxiliar component to get user's role\n  const RoleInput = () => {\n    return (\n      <div>\n        <Button\n          onClick={() => {\n            setRole(\"Medico\");\n          }}\n          className=\"choiceButton\"\n        >\n          Médico (a)\n        </Button>\n        <Button\n          onClick={() => {\n            setRole(\"Enfermeiro\");\n          }}\n          className=\"choiceButton\"\n        >\n          Enfermeiro (a)\n        </Button>\n        <Button\n          onClick={() => {\n            setRole(\"Técnico\");\n          }}\n          className=\"choiceButton\"\n        >\n          Técnico (a)\n        </Button>\n        <Button\n          onClick={() => {\n            setHasSelectedOthersRole(true);\n          }}\n          className=\"choiceButton\"\n        >\n          Outros\n        </Button>\n      </div>\n    );\n  };\n\n  // Main JSX Component\n  return (\n    <div>\n      <div className=\"barra-azul\"></div>\n      <h1>Olá, bem vindo(a) ao ValCruz.</h1>\n      {!role && <h5>Em qual dessas funções você se enquadra melhor?</h5>}\n      {role ? (\n        <div>\n          <div>\n            <TextField\n              error={hasNameError}\n              helperText={hasNameError && \"Nome inválido\"}\n              id=\"outlined-name\"\n              label=\"Nome completo\"\n              value={name}\n              onChange={handleNameChange}\n            />\n          </div>\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"formatted-text-mask-input\">\n                Número de telefone\n              </InputLabel>\n              <Input\n                error={hasTelephoneError}\n                value={telephone}\n                onChange={handleTelephoneChange}\n                name=\"formatted-text-mask-input\"\n                id=\"formatted-text-mask-input\"\n                inputComponent={TextMaskCustom}\n              />\n            </FormControl>\n          </div>\n          <div>\n            <TextField\n              error={hasCityError}\n              helperText={hasCityError && \"Nome de cidade inválido\"}\n              id=\"outlined-city\"\n              label=\"Cidade\"\n              value={city}\n              onChange={handleCityChange}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"outlined-place\"\n              label=\"Unidade de Saúde\"\n              value={place}\n              onChange={handlePlaceChange}\n            />\n          </div>\n          <Button\n            onClick={handleFinishOnboard}\n            color=\"primary\"\n            variant=\"contained\"\n            className=\"nextButton\"\n          >\n            Próximo\n          </Button>\n        </div>\n      ) : hasSelectedOthersRole ? (\n        <div>\n          <TextField\n            id=\"outlined-others-role\"\n            label=\"Função\"\n            value={othersRole}\n            onChange={handleOthersRoleChange}\n          />\n          <Button\n            onClick={handleFilledOthers}\n            color=\"primary\"\n            variant=\"contained\"\n            className=\"nextButton\"\n          >\n            Próximo\n          </Button>\n        </div>\n      ) : (\n        <RoleInput />\n      )}\n    </div>\n  );\n};\nexport default OnBoard;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport Interweave from \"interweave\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst InfoCard = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const whatsappMsg = props.data.text\n    .replace(/<b>/g, \"*\")\n    .replace(/<\\/b>/g, \"*\")\n    .replace(/<br \\/>/g, \"%0D%0A\")\n    .replace(/<br\\/>/g, \"%0D%0A\");\n  const whatsappLink = `whatsapp://send?text=❗ATUALIZAÇÃO ❗ %0D%0A %0D%0A ${whatsappMsg} %0D%0A %0D%0A Para saber mais acesse: %0D%0A https://valcruzapp.github.io/`;\n\n  function formatDate(date) {\n    let array = date.split(\"/\");\n\n    let day = array[1];\n    if (day.length === 1) {\n      day = `0${day}`;\n    }\n\n    let month = array[0];\n    if (month.length === 1) {\n      month = `0${month}`;\n    }\n\n    return `${day}/${month}/${array[2]}`;\n  }\n\n  return (\n    <div key={props.id} className=\"protocolCard\">\n      <Card className={classes.root}>\n        <CardHeader\n          title={props.data.title}\n          subheader={formatDate(props.data.date)}\n        />\n        <CardMedia\n          className={classes.media}\n          image={props.data.image}\n          title={props.data.target}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.data.description}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <a\n            target=\"_blank\"\n            className=\"whatsapp-link\"\n            rel=\"noopener noreferrer\"\n            href={whatsappLink}\n          >\n            <WhatsAppIcon /> COMPARTILHAR\n          </a>\n\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Interweave content={props.data.text} />\n            <br />\n            <br />\n            <Typography paragraph>\n              <a\n                href={props.data.src}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Veja a Fonte\n              </a>\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\nexport default InfoCard;\n","import React from \"react\";\nimport InforCard from \"../components/InfoCard\";\nimport \"./Protocols.css\";\n\nconst Protocols = ({ content }) => {\n  const getDinamicCards = () => {\n    return content.map(c => {\n      const id = c[0];\n      const data = c[1];\n      return <InforCard key={id} id={id} data={data} />;\n    });\n  };\n  return <div className=\"container\">{getDinamicCards()}</div>;\n};\nexport default Protocols;\n","import React, { useState } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { updateHealthCheck } from \"../service/firestore\";\n\nconst FeedbackModal = ({\n  open,\n  handleClose,\n  success,\n  missingEpi,\n  reportId\n}) => {\n  const [openReportEpi, setOpenReportEpi] = useState(false);\n  const [reportedEpi, setReportedEpi] = useState([]);\n\n  const onClickEPI = buttonName => {\n    if (reportedEpi.includes(buttonName)) {\n      setReportedEpi(reportedEpi.filter(e => e !== buttonName));\n    } else {\n      setReportedEpi([...reportedEpi, buttonName]);\n    }\n  };\n\n  const sendReport = () => {\n    updateHealthCheck({ missingEpis: reportedEpi }, reportId);\n    handleClose();\n  };\n\n  const FeedbackBody = () => (\n    <div>\n      <div className=\"Container\">\n        {success ? (\n          <CheckCircleOutlineIcon className=\"WarningIcon\" />\n        ) : (\n          <WarningIcon className=\"WarningIcon\" />\n        )}\n        <h4>\n          {success\n            ? \"Sua auto-avaliação foi atualizada com sucesso!\"\n            : \"Atenção! Compatibilidade de sintomas de contaminação por COVID-19.\"}\n        </h4>\n        {!success && (\n          <h6>\n            Você marcou sintomas compatíveis com a COVID19, esteja atento e\n            considere examinar.\n          </h6>\n        )}\n      </div>\n\n      <div className=\"button-holder\">\n        <Button onClick={() => setOpenReportEpi(true)} variant=\"outlined\">\n          reportar falta de epi\n        </Button>\n        <Button onClick={handleClose} variant=\"contained\">\n          OK\n        </Button>\n      </div>\n    </div>\n  );\n\n  const FeedbackEpi = () => (\n    <div className=\"Container\">\n      <h4>Reportar falta de EPI</h4>\n      <h6>\n        Marque os EPIs que você não teve acesso durante o plantão de\n        atendimento.\n      </h6>\n      <div className=\"epi-options\">\n        {missingEpi.map(e => (\n          <Button\n            variant={reportedEpi.includes(e) ? \"contained\" : \"outlined\"}\n            onClick={() => onClickEPI(e)}\n          >\n            {e}\n          </Button>\n        ))}\n      </div>\n      <div>\n        <Button\n          className=\"rounded-button\"\n          onClick={sendReport}\n          variant=\"contained\"\n        >\n          enviar\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Modal\n      aria-labelledby=\"Enviado com sucesso\"\n      aria-describedby=\"Os dados foram enviados com sucesso\"\n      open={open}\n      onClose={handleClose}\n    >\n      <div className=\"Modal\">\n        <div className=\"CloseButton\">\n          <IconButton onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n        {openReportEpi ? <FeedbackEpi /> : <FeedbackBody />}\n      </div>\n    </Modal>\n  );\n};\n\nexport default FeedbackModal;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./SelfCheckup.css\";\nimport { reportHealthCheck } from \"../service/firestore\";\nimport FeedbackModal from \"../components/FeedbackModal\";\n\nconst SelfCheckup = props => {\n  const SYMPTOMS_LIST = [\n    \"Cansaço\",\n    \"Congestão nasal\",\n    \"Corrimento nasal (coriza)\",\n    \"Febre\",\n    \"Dificuldade para respirar\",\n    \"Tosse\",\n    \"Dor de Cabeça\",\n    \"Dor de garganta\",\n    \"Dores pelo corpo\",\n    \"Mal estar geral\",\n    \"Diarréia\",\n    \"Vômito\"\n  ];\n  const EPIS_LIST = [\n    \"Gorro\",\n    \"Óculos de proteção\",\n    \"Protetor facial\",\n    \"Máscara\",\n    \"Avental hipermeável\",\n    \"Luvas de procedimento\"\n  ];\n  const [symptoms, setSymptom] = useState([]);\n  const [reportId, setReportId] = useState();\n  const [epi, setEPI] = useState([]);\n  const [hadContact, setHadContact] = useState(\"Não sei informar\");\n\n  const onClickSympthon = buttonName => {\n    if (symptoms.includes(buttonName)) {\n      setSymptom(symptoms.filter(e => e !== buttonName));\n    } else {\n      setSymptom([...symptoms, buttonName]);\n    }\n  };\n\n  const onClickEPI = buttonName => {\n    if (epi.includes(buttonName)) {\n      setEPI(epi.filter(e => e !== buttonName));\n    } else {\n      setEPI([...epi, buttonName]);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const lastReport = { symptoms, epi, hadContact, missingEpis: [] };\n    localStorage.setItem(\"lastReport\", JSON.stringify(lastReport));\n    const dbReportId = await reportHealthCheck(lastReport);\n    setReportId(dbReportId);\n  };\n\n  const handleClose = () => {\n    setReportId();\n    setSymptom([]);\n    setEPI([]);\n    setHadContact(\"Não sei informar\");\n    props.onSubmitCheckup();\n  };\n\n  return (\n    <div>\n      <h4>Faça uma auto-avaliação do seu estado de saúde.</h4>\n      <div>\n        {SYMPTOMS_LIST.map(s => (\n          <Button\n            variant={symptoms.includes(s) ? \"contained\" : \"outlined\"}\n            onClick={() => onClickSympthon(s)}\n          >\n            {s}\n          </Button>\n        ))}\n      </div>\n      <h4>Quais EPIs você teve acesso hoje?</h4>\n      <div>\n        {EPIS_LIST.map(e => (\n          <Button\n            variant={epi.includes(e) ? \"contained\" : \"outlined\"}\n            onClick={() => onClickEPI(e)}\n          >\n            {e}\n          </Button>\n        ))}\n      </div>\n      <h4>Algum paciente atendido foi diagnosticado como positivo?</h4>\n      <div>\n        <Button\n          variant={hadContact === \"Sim\" ? \"contained\" : \"outlined\"}\n          onClick={() => setHadContact(\"Sim\")}\n        >\n          Sim\n        </Button>\n        <Button\n          variant={hadContact === \"Não\" ? \"contained\" : \"outlined\"}\n          onClick={() => setHadContact(\"Não\")}\n        >\n          Não\n        </Button>\n        <Button\n          variant={hadContact === \"Não sei informar\" ? \"contained\" : \"outlined\"}\n          onClick={() => setHadContact(\"Não sei informar\")}\n        >\n          Não sei informar\n        </Button>\n      </div>\n      <FeedbackModal\n        success={\n          !(\n            symptoms.includes(\"Febre\") ||\n            symptoms.includes(\"Dificuldade para respirar\")\n          )\n        }\n        open={!!reportId}\n        reportId={reportId}\n        handleClose={handleClose}\n        missingEpi={EPIS_LIST.filter(e => !epi.includes(e))}\n      />\n      <div>\n        <Button\n          onClick={handleSubmit}\n          className=\"rounded-button\"\n          variant=\"contained\"\n        >\n          Enviar\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default SelfCheckup;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextMaskCustom from \"../components/TextMaskCustom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { updateUser } from \"../service/firestore\";\nimport \"./Profile.css\";\n\nconst Profile = props => {\n  const [name, setName] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n\n  const [hasTelephoneError, setHasTelephoneError] = useState(false);\n  const [hasNameError, setHasNameError] = useState(false);\n  const [hasCityError, setHasCityError] = useState(false);\n\n  useEffect(() => {\n    const localCity = localStorage.getItem(\"city\");\n    const camelizedCity =\n      localCity.charAt(0).toUpperCase() + localCity.slice(1);\n    setRole(localStorage.getItem(\"role\"));\n    setTelephone(localStorage.getItem(\"telephone\"));\n    setName(localStorage.getItem(\"name\"));\n    setCity(camelizedCity);\n    setPlace(localStorage.getItem(\"place\"));\n  }, []);\n\n  // Validate Functions\n  const validateTelephone = () => {\n    if (telephone && telephone.replace(/[\\u2000]/g, \"\").length >= 14) {\n      return true;\n    } else {\n      setHasTelephoneError(true);\n      return false;\n    }\n  };\n\n  const validateName = () => {\n    if (name && name.replace(/\\d/g, \"\").length > 3) {\n      return true;\n    } else {\n      setHasNameError(true);\n      return false;\n    }\n  };\n\n  const validateCity = () => {\n    if (city && city.replace(/\\d/g, \"\").length > 3) {\n      return true;\n    } else {\n      setHasCityError(true);\n      return false;\n    }\n  };\n\n  // Handle Change Functions\n  const handleTelephoneChange = event => {\n    setHasTelephoneError(false);\n    setTelephone(event.target.value);\n  };\n  const handleNameChange = event => {\n    setHasNameError(false);\n    setName(event.target.value);\n  };\n\n  const handleCityChange = event => {\n    setHasCityError(false);\n    setCity(event.target.value);\n  };\n\n  const handlePlaceChange = event => {\n    setPlace(event.target.value);\n  };\n\n  const handleUpdate = () => {\n    const lowerCaseCity = city.toLowerCase();\n    localStorage.setItem(\"role\", role);\n    localStorage.setItem(\"telephone\", telephone);\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"city\", lowerCaseCity);\n    localStorage.setItem(\"place\", place);\n\n    if (validateName() && validateTelephone() && validateCity()) {\n      localStorage.setItem(\"hasOnboardFinished\", \"true\");\n      updateUser({\n        role,\n        telephone,\n        name,\n        city: lowerCaseCity,\n        place: place || \"\"\n      });\n      // Callback father's onOnboardFinish function\n      props.onUpdateFinish();\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <TextField\n          error={hasNameError}\n          helperText={hasNameError && \"Nome inválido\"}\n          id=\"outlined-name\"\n          label=\"Nome completo\"\n          value={name}\n          onChange={handleNameChange}\n        />\n      </div>\n      <FormControl>\n        <InputLabel htmlFor=\"formatted-text-mask-input\">\n          Número de telefone\n        </InputLabel>\n        <Input\n          error={hasTelephoneError}\n          value={telephone}\n          onChange={handleTelephoneChange}\n          name=\"formatted-text-mask-input\"\n          id=\"formatted-text-mask-input\"\n          inputComponent={TextMaskCustom}\n        />\n      </FormControl>\n      <TextField disabled id=\"outlined-name\" label=\"Ocupação\" value={role} />\n      <div>\n        <TextField\n          error={hasCityError}\n          helperText={hasCityError && \"Nome de cidade inválido\"}\n          id=\"outlined-city\"\n          label=\"Cidade\"\n          value={city}\n          onChange={handleCityChange}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"outlined-place\"\n          label=\"Unidade de Saúde\"\n          value={place}\n          onChange={handlePlaceChange}\n        />\n      </div>\n      <div>\n        <Button onClick={handleUpdate} color=\"primary\" variant=\"contained\">\n          Atualizar dados\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default Profile;\n","import firebase from \"firebase\";\nimport { setPushKeys } from \"../service/firestore\";\n\nexport const requestPermission = async () => {\n  let token = localStorage.getItem(\"pushtoken\");\n  if (token == null) {\n    const ms = firebase.messaging();\n    await ms.requestPermission();\n    token = await ms.getToken();\n    setPushKeys(token);\n    localStorage.setItem(\"pushtoken\", token);\n    console.log(token);\n  } else {\n    console.log(\"Already Approved\");\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OnBoard from \"./screens/OnBoard\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport SchoolIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/AnnouncementOutlined\";\nimport FaceIcon from \"@material-ui/icons/PersonOutlined\";\nimport Protocols from \"./screens/Protocols\";\nimport SelfCheckup from \"./screens/SelfCheckup\";\nimport Profile from \"./screens/Profile\";\nimport { getContent } from \"./service/firestore\";\nimport { requestPermission } from \"./service/PushNotifications\";\n\nfunction App() {\n  const [hasOnboardFinished, setHasOnboardFinished] = useState();\n  const [tab, setTab] = React.useState(0);\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    setHasOnboardFinished(localStorage.getItem(\"hasOnboardFinished\"));\n\n    // Get Content\n    setContent(JSON.parse(localStorage.getItem(\"cachedContent\")));\n    getContent(localStorage.getItem(\"role\")).then(dbContent => {\n      setContent(Object.entries(dbContent));\n      localStorage.setItem(\n        \"cachedContent\",\n        JSON.stringify(Object.entries(dbContent))\n      );\n    });\n\n    // Update Content every minute\n    setInterval(() => {\n      // han pooling at 1 minute\n      getContent(localStorage.getItem(\"role\")).then(dbContent => {\n        setContent(Object.entries(dbContent));\n        localStorage.setItem(\n          \"cachedContent\",\n          JSON.stringify(Object.entries(dbContent))\n        );\n      });\n    }, 60 * 1000);\n\n    // Request firebase permission\n    requestPermission();\n  }, []);\n\n  const onOnboardFinish = () => {\n    setHasOnboardFinished(true);\n  };\n  const navigateToProtocols = () => {\n    setTab(0);\n  };\n\n  const ComponentsStack = [\n    <Protocols content={content} />,\n    <SelfCheckup onSubmitCheckup={navigateToProtocols} />,\n    <Profile onUpdateFinish={navigateToProtocols} />\n  ];\n  const tabsName = [\"Comunicados\", \"Auto-Avaliação\", \"Perfil\"];\n\n  return (\n    <div className=\"App\">\n      {hasOnboardFinished ? (\n        <div>\n          <h1 className=\"pageName\">{tabsName[tab]}</h1>\n\n          <div>{ComponentsStack[tab]}</div>\n          <BottomNavigation\n            value={tab}\n            onChange={(event, newTab) => {\n              setTab(newTab);\n            }}\n            showLabels\n          >\n            <BottomNavigationAction\n              label={tabsName[0]}\n              icon={<FavoriteIcon />}\n            />\n            <BottomNavigationAction label={tabsName[1]} icon={<SchoolIcon />} />\n            <BottomNavigationAction label={tabsName[2]} icon={<FaceIcon />} />\n          </BottomNavigation>\n        </div>\n      ) : (\n        <OnBoard onOnboardFinish={onOnboardFinish} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { initFirebase } from \"./service/firestore\";\ninitFirebase();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}