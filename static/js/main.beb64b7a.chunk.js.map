{"version":3,"sources":["components/TextMaskCustom.js","screens/OnBoard.js","components/ProtocolCard1.js","components/ProtocolCard2.js","screens/Protocols.js","screens/SelfCheckup.js","screens/Profile.js","App.js","serviceWorker.js","index.js"],"names":["TextMaskCustom","props","inputRef","other","ref","inputElement","mask","placeholderChar","showMask","OnBoard","useState","role","setRole","telephone","setTelephone","React","name","setName","className","TextField","id","label","value","onChange","event","target","FormControl","InputLabel","htmlFor","Input","inputComponent","Button","onClick","localStorage","setItem","onOnboardFinish","color","variant","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Link","rel","href","ProtocolCard1","classes","expanded","setExpanded","Card","CardHeader","action","style","cursor","IconButton","component","aria-label","title","subheader","CardMedia","image","CardContent","Typography","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","ProtocolCard2","Protocols","SelfCheckup","symptoms","setSymptom","onClickSympthon","buttonName","includes","filter","e","epi","setEPI","onClickEPI","hadContact","setHadContact","temperature","setTemperature","lastReport","JSON","stringify","onSubmitCheckup","Profile","useEffect","getItem","App","hasOnboardFinished","setHasOnboardFinished","tab","setTab","ComponentsStack","tabsName","BottomNavigation","newTab","showLabels","BottomNavigationAction","icon","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.beb64b7a.chunk.js","sourcesContent":["import React from \"react\";\nimport MaskedInput from \"react-text-mask\";\n\nconst TextMaskCustom = props => {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[\n        \"(\",\n        /[1-9]/,\n        /\\d/,\n        \")\",\n        \" \",\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        \"-\",\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/\n      ]}\n      placeholderChar={\"\\u2000\"}\n      showMask\n    />\n  );\n};\n\nexport default TextMaskCustom;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextMaskCustom from \"../components/TextMaskCustom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./OnBoard.css\";\n\nconst OnBoard = props => {\n  const [role, setRole] = useState();\n  const [telephone, setTelephone] = useState();\n  const handleTelephoneChange = event => {\n    setTelephone(event.target.value);\n  };\n  const [name, setName] = React.useState(\"\");\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleFinishOnboard = () => {\n    localStorage.setItem(\"role\", role);\n    localStorage.setItem(\"telephone\", telephone);\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"hasOnboardFinished\", \"true\");\n    props.onOnboardFinish();\n  };\n\n  const RoleInput = () => (\n    <div>\n      <Button\n        onClick={() => {\n          setRole(\"Medico\");\n        }}\n        className=\"choiceButton\"\n      >\n        Médico (a)\n      </Button>\n      <Button\n        onClick={() => {\n          setRole(\"Enfermeiro\");\n        }}\n        className=\"choiceButton\"\n      >\n        Enfermeiro (a)\n      </Button>\n      <Button\n        onClick={() => {\n          setRole(\"Tecnico\");\n        }}\n        className=\"choiceButton\"\n      >\n        Técnico (a)\n      </Button>\n      <Button\n        onClick={() => {\n          setRole(\"Outros\");\n        }}\n        className=\"choiceButton\"\n      >\n        Outros\n      </Button>\n    </div>\n  );\n\n  return (\n    <div>\n      <div className=\"barra-azul\"></div>\n      <h1>Olá, bem vindo(a) ao ValCruz.</h1>\n      {!role && <h5>Em qual dessas funções você se enquadra melhor?</h5>}\n      {role ? (\n        <div>\n          <div>\n            <TextField\n              id=\"outlined-name\"\n              label=\"Nome completo\"\n              value={name}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"formatted-text-mask-input\">\n                Número de telefone\n              </InputLabel>\n              <Input\n                value={telephone}\n                onChange={handleTelephoneChange}\n                name=\"formatted-text-mask-input\"\n                id=\"formatted-text-mask-input\"\n                inputComponent={TextMaskCustom}\n              />\n            </FormControl>\n          </div>\n          <Button\n            onClick={handleFinishOnboard}\n            color=\"primary\"\n            variant=\"contained\"\n            className=\"nextButton\"\n          >\n            Próximo\n          </Button>\n        </div>\n      ) : (\n        <RoleInput />\n      )}\n    </div>\n  );\n};\nexport default OnBoard;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst Link = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"whatsapp://send?text=❗ATUALIZAÇÃO ❗ %0D%0A %0D%0A A Associação Brasileira de Enfermeiros de Centro Cirúrgico (Sobecc) publicou algumas recomendações sobre o atendimento de pacientes com suspeita ou infecção confirmada pelo Covid-19 em procedimentos cirúrgicos ou endoscópicos. %0D%0A %0D%0A O material tem como objetivo garantir a segurança e a instrumentalização dos profissionais que atuam nessa área de assistência. %0D%0A %0D%0A Entre as recomendações, destacam-se: %0D%0A - proteção da equipe; %0D%0A - organização do atendimento; %0D%0A - preparo da sala de procedimento; %0D%0A - transporte do paciente cirúrgico intraoperatório %0D%0A - realização do procedimento endoscópio e pós-operatório ou pós-procedimento endoscópio imediato. %0D%0A %0D%0A para saber mais acesse : %0D%0A https://monitorcovid19.github.io/\"\n  >\n    <ShareIcon />\n  </a>\n);\n\nconst ProtocolCard1 = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardHeader\n          action={\n            <span style={{ cursor: \"not-allowed\" }}>\n              <IconButton component={Link} aria-label=\"share\"></IconButton>\n            </span>\n          }\n          title=\"Procedimentos Cirúrgicos ou Endoscópicos\"\n          subheader=\"19 de Março, 2020\"\n        />\n        <CardMedia\n          className={classes.media}\n          image=\"https://www.catho.com.br/educacao/blog/wp-content/uploads/sites/2/2018/12/2018-12-06-Por-que-estudar-Enfermagem.png\"\n          title=\"Enfermagem\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Associação brasileira de enfermeiros publica recomendações para\n            procedimentos cirúrgicos ou endoscópico\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>\n              A Associação Brasileira de Enfermeiros de Centro Cirúrgico\n              (Sobecc) publicou algumas <b>recomendações</b> sobre o atendimento\n              de pacientes com suspeita ou infecção confirmada pelo Covid-19 em\n              procedimentos cirúrgicos ou endoscópicos.\n            </Typography>\n            <Typography paragraph>\n              O material tem como objetivo garantir a{\" \"}\n              <b>segurança e a instrumentalização</b> dos profissionais que\n              atuam nessa área de assistência.\n            </Typography>\n            <Typography paragraph>\n              Entre as recomendações, destacam-se: <br />\n              - proteção da equipe; <br />\n              - organização do atendimento; <br />\n              - preparo da sala de procedimento;\n              <br />\n              - transporte do paciente cirúrgico intraoperatório <br />\n              - realização do procedimento endoscópio e pós-operatório ou\n              pós-procedimento endoscópio imediato. <br />\n            </Typography>\n            <Typography paragraph>\n              <a\n                href=\"https://portal.coren-sp.gov.br/noticias/covid-19-sobecc-publica-recomendacoes-relacionadas-aos-procedimentos-cirurgico-ou-endoscopicos/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Veja a Fonte\n              </a>\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\nexport default ProtocolCard1;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst Link = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"whatsapp://send?text=Segurança no Trabalho ao atendimento dos infectados pelo COVID-19%0D%0A %0D%0AO ambiente hospitalar é um local onde se encontram muitos riscos (químicos, físicos, biológicos e entre outros). Por este motivo, o investimento em segurança do trabalho e a conscientização do uso correto dos EPIs ajudam a prevenir acidentes, doenças e controlar os riscos. %0D%0A %0D%0AAbaixo segue uma lista de EPIs necessários para um atendimento seguro os suspeitos ou infectados pelo novo coronavirus, bem como sua devida utilização.%0D%0A %0D%0A- gorro; %0D%0A- óculos de proteção ou protetor facial; %0D%0A- máscara %0D%0A- avental impermeável de mangas longas/capote; %0D%0A- luvas.  *Veja mais em:* http://www.anvisa.gov.br/servicosaude/manuais/seguranca_hosp.pdf\"\n  >\n    <ShareIcon />\n  </a>\n);\n\nconst ProtocolCard2 = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardHeader\n          action={\n            <span style={{ cursor: \"not-allowed\" }}>\n              <IconButton component={Link} aria-label=\"share\"></IconButton>\n            </span>\n          }\n          title=\"Segurança no Trabalho ao atendimento dos infectados pelo COVID-19\"\n          subheader=\"15 de Março, 2020\"\n        />\n        <CardMedia\n          className={classes.media}\n          image=\"https://telemedicinamorsch.com.br/wp-content/uploads/2019/01/seguranca-do-trabalho-hospitais-o-que-e.jpg\"\n          title=\"Enfermagem\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            O ambiente hospitalar é um local onde se encontram muitos riscos\n            (químicos, físicos, biológicos e entre outros). Entenda como\n            utilizar os EPI's.\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>\n              O ambiente hospitalar é um local onde se encontram muitos riscos\n              (químicos, físicos, biológicos e entre outros). Por este motivo, o\n              investimento em segurança do trabalho e a conscientização do uso\n              correto dos EPIs ajudam a prevenir acidentes, doenças e controlar\n              os riscos.\n            </Typography>\n            <Typography paragraph>\n              Abaixo segue uma lista de EPIs necessários para um atendimento\n              seguro os suspeitos ou infectados pelo <b>novo coronavirus</b>,\n              bem como sua devida utilização.\n            </Typography>\n            <Typography paragraph>\n              - gorro;\n              <br />\n              - óculos de proteção ou protetor facial;\n              <br />\n              - máscara <br />\n              - avental impermeável de mangas longas/capote;\n              <br />\n              - luvas.\n              <br />\n            </Typography>\n            <Typography paragraph>\n              <a\n                href=\"http://www.anvisa.gov.br/servicosaude/manuais/seguranca_hosp.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Veja a Fonte\n              </a>\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\nexport default ProtocolCard2;\n","import React from \"react\";\nimport ProtocolCard1 from \"../components/ProtocolCard1\";\nimport ProtocolCard2 from \"../components/ProtocolCard2\";\n\nconst Protocols = props => {\n  return (\n    <div>\n      <ProtocolCard1 />\n      <ProtocolCard2 />\n    </div>\n  );\n};\nexport default Protocols;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./SelfCheckup.css\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst SelfCheckup = props => {\n  const [symptoms, setSymptom] = useState([]);\n  const onClickSympthon = buttonName => {\n    if (symptoms.includes(buttonName)) {\n      setSymptom(symptoms.filter(e => e !== buttonName));\n    } else {\n      setSymptom([...symptoms, buttonName]);\n    }\n  };\n\n  const [epi, setEPI] = useState([]);\n  const onClickEPI = buttonName => {\n    if (epi.includes(buttonName)) {\n      setEPI(epi.filter(e => e !== buttonName));\n    } else {\n      setEPI([...epi, buttonName]);\n    }\n  };\n\n  const [hadContact, setHadContact] = useState();\n\n  const [temperature, setTemperature] = React.useState(\"\");\n  const handleChange = event => {\n    setTemperature(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    const lastReport = { symptoms, epi, hadContact };\n    localStorage.setItem(\"lastReport\", JSON.stringify(lastReport));\n    setSymptom([]);\n    setEPI([]);\n    setTemperature(\"\");\n    setHadContact();\n    props.onSubmitCheckup();\n  };\n  return (\n    <div>\n      <h4>Faça uma auto-avaliação do seu estado de saúde.</h4>\n      <div>\n        <Button\n          variant={symptoms.includes(\"Cansaço\") ? \"contained\" : \"outlined\"}\n          onClick={() => onClickSympthon(\"Cansaço\")}\n        >\n          Cansaço\n        </Button>\n        <Button\n          variant={\n            symptoms.includes(\"Congestão nasal\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickSympthon(\"Congestão nasal\")}\n        >\n          Congestão nasal\n        </Button>\n        <Button\n          variant={\n            symptoms.includes(\"Corrimento nasal (coriza)\")\n              ? \"contained\"\n              : \"outlined\"\n          }\n          onClick={() => onClickSympthon(\"Corrimento nasal (coriza)\")}\n        >\n          Corrimento nasal (coriza)\n        </Button>\n        <Button\n          variant={symptoms.includes(\"Febre\") ? \"contained\" : \"outlined\"}\n          onClick={() => onClickSympthon(\"Febre\")}\n        >\n          Febre\n        </Button>\n        <Button\n          variant={\n            symptoms.includes(\"Dificuldade para respirar\")\n              ? \"contained\"\n              : \"outlined\"\n          }\n          onClick={() => onClickSympthon(\"Dificuldade para respirar\")}\n        >\n          Dificuldade para respirar\n        </Button>\n        <Button\n          variant={symptoms.includes(\"Tosse\") ? \"contained\" : \"outlined\"}\n          onClick={() => onClickSympthon(\"Tosse\")}\n        >\n          Tosse\n        </Button>\n        <Button\n          variant={\n            symptoms.includes(\"Dor de Cabeça\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickSympthon(\"Dor de Cabeça\")}\n        >\n          Dor de Cabeça\n        </Button>\n        <Button\n          variant={\n            symptoms.includes(\"Dor de garganta\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickSympthon(\"Dor de garganta\")}\n        >\n          Dor de garganta\n        </Button>\n        <Button\n          variant={\n            symptoms.includes(\"Dores pelo corpo\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickSympthon(\"Dores pelo corpo\")}\n        >\n          Dores pelo corpo\n        </Button>\n        <Button\n          variant={\n            symptoms.includes(\"Mal estar geral\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickSympthon(\"Mal estar geral\")}\n        >\n          Mal estar geral\n        </Button>\n      </div>\n      <div>\n        <TextField\n          id=\"temperature\"\n          label=\"Temperatura em ºC\"\n          value={temperature}\n          onChange={handleChange}\n        />\n      </div>\n      <h4>Quais destas EPIs você utilizou hoje?</h4>\n      <div>\n        <Button\n          variant={epi.includes(\"Gorro\") ? \"contained\" : \"outlined\"}\n          onClick={() => onClickEPI(\"Gorro\")}\n        >\n          Gorro\n        </Button>\n        <Button\n          variant={\n            epi.includes(\"Óculos de proteção\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickEPI(\"Óculos de proteção\")}\n        >\n          Óculos de proteção\n        </Button>\n        <Button\n          variant={epi.includes(\"Protetor facial\") ? \"contained\" : \"outlined\"}\n          onClick={() => onClickEPI(\"Protetor facial\")}\n        >\n          Protetor facial\n        </Button>\n        <Button\n          variant={epi.includes(\"Máscara\") ? \"contained\" : \"outlined\"}\n          onClick={() => onClickEPI(\"Máscara\")}\n        >\n          Máscara\n        </Button>\n        <Button\n          variant={\n            epi.includes(\"Avental hipermeável\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickEPI(\"Avental hipermeável\")}\n        >\n          Avental hipermeável\n        </Button>\n        <Button\n          variant={\n            epi.includes(\"Luvas de procedimento\") ? \"contained\" : \"outlined\"\n          }\n          onClick={() => onClickEPI(\"Luvas de procedimento\")}\n        >\n          Luvas de procedimento\n        </Button>\n      </div>\n      <h4>Algum paciente atendido foi diagnosticado como positivo?</h4>\n      <div>\n        <Button\n          variant={hadContact === \"Sim\" ? \"contained\" : \"outlined\"}\n          onClick={() => setHadContact(\"Sim\")}\n        >\n          Sim\n        </Button>\n        <Button\n          variant={hadContact === \"Não\" ? \"contained\" : \"outlined\"}\n          onClick={() => setHadContact(\"Não\")}\n        >\n          Não\n        </Button>\n        <Button\n          variant={hadContact === \"Não sei informar\" ? \"contained\" : \"outlined\"}\n          onClick={() => setHadContact(\"Não sei informar\")}\n        >\n          Não sei informar\n        </Button>\n      </div>\n      <div>\n        <Button\n          onClick={handleSubmit}\n          className=\"rounded-button\"\n          variant=\"contained\"\n        >\n          Enviar\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default SelfCheckup;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Profile.css\";\n\nconst Profile = props => {\n  const [name, setName] = useState();\n  const [telephone, setTelephone] = useState();\n  const [role, setRole] = useState();\n  useEffect(() => {\n    setRole(localStorage.getItem(\"role\"));\n    setTelephone(localStorage.getItem(\"telephone\"));\n    setName(localStorage.getItem(\"name\"));\n  }, []);\n  return (\n    <div>\n      <p>Nome:</p>\n      <h1>{name}</h1>\n      <p>Número do Telefone:</p>\n      <h1>{telephone}</h1>\n      <p>Ocupação:</p>\n      <h1>{role}</h1>\n    </div>\n  );\n};\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport OnBoard from \"./screens/OnBoard\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport SchoolIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport FavoriteIcon from \"@material-ui/icons/AnnouncementOutlined\";\nimport FaceIcon from \"@material-ui/icons/PersonOutlined\";\nimport Protocols from \"./screens/Protocols\";\nimport SelfCheckup from \"./screens/SelfCheckup\";\nimport Profile from \"./screens/Profile\";\n\nfunction App() {\n  const [hasOnboardFinished, setHasOnboardFinished] = useState();\n  useEffect(() => {\n    setHasOnboardFinished(localStorage.getItem(\"hasOnboardFinished\"));\n  }, []);\n  const onOnboardFinish = () => {\n    setHasOnboardFinished(true);\n  };\n  const [tab, setTab] = React.useState(0);\n  const onSubmitCheckup = () => {\n    setTab(0);\n  };\n\n  const ComponentsStack = [\n    <Protocols />,\n    <SelfCheckup onSubmitCheckup={onSubmitCheckup} />,\n    <Profile />\n  ];\n  const tabsName = [\"Comunicados\", \"Auto-Avaliação\", \"Perfil\"];\n\n  return (\n    <div className=\"App\">\n      {hasOnboardFinished ? (\n        <div>\n          <h1 className=\"pageName\">{tabsName[tab]}</h1>\n\n          <div>{ComponentsStack[tab]}</div>\n          <BottomNavigation\n            value={tab}\n            onChange={(event, newTab) => {\n              setTab(newTab);\n            }}\n            showLabels\n          >\n            <BottomNavigationAction\n              label={tabsName[0]}\n              icon={<FavoriteIcon />}\n            />\n            <BottomNavigationAction label={tabsName[1]} icon={<SchoolIcon />} />\n            <BottomNavigationAction label={tabsName[2]} icon={<FaceIcon />} />\n          </BottomNavigation>\n        </div>\n      ) : (\n        <OnBoard onOnboardFinish={onOnboardFinish} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}